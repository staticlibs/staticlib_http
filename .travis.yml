# Copyright 2017, alex at staticlibs.net
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

language: cpp

sudo: required

services:
  - docker

os:
  - osx
  - linux

before_install:
  - export CC=
  - export CXX=
  - export D="docker exec fedora"
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
    docker pull fedora ;
    docker run -id --name fedora -v `pwd`/..:/src -w=/root -e "PKG_CONFIG_PATH=/src/external_asio/resources/pkgconfig_system" fedora bash ;
    fi

install:
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then 

    `# Ubuntu` ;
    sudo apt-get -y install
        g++
        pkg-config
        cmake
        make
        valgrind
        libasio-dev
        libssl-dev
        libcurl4-openssl-dev ;

    `# Fedora` ;
    $D dnf install -y
        gcc-c++
        pkg-config
        cmake
        make
        valgrind
        asio-devel
        openssl-devel
        libcurl-devel ;

    `# Android` ;
    git clone https://github.com/staticlibs/android-ndk-r9d-arm-linux-androideabi-4.8.git ../android-ndk ;

    fi

before_script:
  - cd ..
  - git clone https://github.com/staticlibs/cmake.git
# mac
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
    git clone https://github.com/staticlibs/tools_macos_openssl.git ;
    export PKG_CONFIG_PATH=`pwd`/tools_macos_openssl/lib/pkgconfig:$PKG_CONFIG_PATH ;
    fi
# android
  - git clone --recursive https://github.com/staticlibs/external_openssl.git
# mac and android
  - git clone --recursive https://github.com/staticlibs/external_asio.git
  - git clone --recursive https://github.com/staticlibs/external_zlib.git
  - git clone --recursive https://github.com/staticlibs/external_curl.git
# all platforms
  - git clone https://github.com/staticlibs/staticlib_config.git
  - git clone https://github.com/staticlibs/staticlib_support.git
  - git clone https://github.com/staticlibs/staticlib_concurrent.git
  - git clone https://github.com/staticlibs/staticlib_io.git
  - git clone https://github.com/staticlibs/staticlib_crypto.git
  - git clone https://github.com/staticlibs/staticlib_pimpl.git
# linux
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
    export PKG_CONFIG_PATH=`pwd`/external_asio/resources/pkgconfig_system:$PKG_CONFIG_PATH ;
    fi
# test only
  - rm -rf test
  - mkdir test
  - cp -r staticlib_http/test/certificates test/
  - git clone https://github.com/staticlibs/staticlib_utils.git
  - git clone --recursive https://github.com/staticlibs/staticlib_tinydir.git
  - git clone https://github.com/staticlibs/staticlib_pion.git

script:
  - set -e
  - mkdir build-standalone
  - mkdir build

  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then

    `# macOS` ;
    set +e ;
    pushd build-standalone ;
    set -e ;
    cmake ../staticlib_http  -DCMAKE_CXX_FLAGS="--std=c++1z" ;
    make ;
    set +e;
    popd ;
    pushd build ;
    set -e ;
    cmake ../staticlib_http/test -DSTATICLIB_TOOLCHAIN=macosx_amd64_clang -DCMAKE_BUILD_TYPE=Release ;
    make all test ;

    fi

  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then

    `# Ubuntu` ;
    lsb_release -a ;
    pushd build-standalone ;
    cmake ../staticlib_http -DCMAKE_CXX_FLAGS="--std=c++11" ;
    make ;
    popd ;
    pushd build ;
    cmake ../staticlib_http/test -DCMAKE_BUILD_TYPE=Release ;
    make all test ;
    popd ;

    `# Fedora` ;
    $D cat /etc/fedora-release ;
    $D cmake /src/staticlib_http -DCMAKE_CXX_FLAGS="--std=c++17" ;
    $D make ;
    $D sh -c "rm -rf /root && mkdir /root" ;
    $D cmake /src/staticlib_http/test -DSTATICLIB_TOOLCHAIN=linux_amd64_gcc -DCMAKE_BUILD_TYPE=Release ;
    $D mkdir /test ;
    $D cp -r /src/staticlib_http/test/certificates /test/ ;
    $D make all test ;

    `# Android` ;
    mkdir build-android ;
    pushd build-android ;
    cmake ../staticlib_http/test -DCMAKE_BUILD_TYPE=Release -DSTATICLIB_TOOLCHAIN=android_armeabi_gcc -DANDROID_TOOLCHAIN_DIR=`pwd`/../android-ndk ;
    make ;

    fi

notifications:
  email:
    on_success: always
